/*
    정말 다양한 방법을 생각해서 시도하였지만, 시간초과가 걸리거나, 어느 조건을 만족시키지 못했다..
    그래도 백준 그리디를 30문제 정도 푼 상태인데, 성공하지 못해서 현타가왔다.

    풀이는 아래와 같다. 예를 들어 
    "4 1 7 7 2 5 2 8 4 1" 4개 제외해야한다고 하면, 총 6자리 수를 리턴해야하는 것이다.
    그럼 리턴해야하는 자리수-1 만큼을 제외한 수 중 가장 큰수를 가장 앞에 넣어준다.
    "4 1 7 7 2" 중에 가장 큰 수 7을 맨 앞자리에 넣어준다. 이 수들 중 가장 큰 수가 십만 자리에 오는 것이 가장 큰 수이기 때문이다.
    그 후 5자리가 남았으므로 넣어줬던 수의 인덱스부터, 맨 끝에서 남은자리 수-1 만큼의 수를 제외한 수 중 가장 큰 수를 넣어준다.
    "7 2 5" 중 가장 큰 수 7을 넣어준다. 이 수들 중 가장 큰 수가 만의 자리에 오는 것이 가장 큰 수이기 때문이다.
    이런 과정을 반복해주면 된다.
*/
#include <string>

using namespace std;

string solution(string number, int k) {
    string answer = "";
    int size=number.size();
    int length=size-k; // 정답의 길이
    int select = 0; // 선택한 수의 인덱스(처음은 0으로 초기화)
    
    for(int i=0; i<length; i++) {
        char maxNum='0'; // 검사를 시작할 인덱스의 숫자
        
        // 선택된 다음 요소부터, 빼야하는 수 + 현재 자리수까지
        for(int j=select; j<=k+i; j++) {
            
            // 뒤의 수가 더 크다면 선택
            if(maxNum<number[j]) {
                maxNum=number[j];
                select=j;
            }
        }

        select++; // 선택한 다음 요소로 인덱스 설정
        answer+=maxNum; // 가장 큰 수를 정답에 더해줌
    }
    
    return answer;
}